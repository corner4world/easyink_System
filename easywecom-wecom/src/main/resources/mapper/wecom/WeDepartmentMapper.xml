<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easywecom.wecom.mapper.WeDepartmentMapper">

    <resultMap type="WeDepartment" id="WeDepartmentResult">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="parentId" column="parent_id"/>
    </resultMap>

    <sql id="selectWeDepartmentVo">
        select id, name, parent_id,corp_id from we_department
    </sql>

    <select id="selectWeDepartmentList" resultMap="WeDepartmentResult">
        <include refid="selectWeDepartmentVo"/>
        WHERE corp_id = #{corpId}
    </select>

    <select id="selectWeDepartmentById"  resultMap="WeDepartmentResult">
        <include refid="selectWeDepartmentVo"/>
        WHERE corp_id= #{corpId} AND id = #{id}
    </select>
    <select id="selectNameByUserId" resultType="java.lang.String">
        SELECT IFNULL(group_concat(name), '')
        FROM we_department wd
                 LEFT JOIN we_user wu ON wu.main_department = wd.id
        WHERE wd.corp_id =#{corpId} AND user_id = #{userId}
    </select>
    <!--    查询部门和其下级部门的总人数-->
    <select id="selectTotalUserCount" resultType="java.lang.Integer">
        SELECT COUNT(0)
        FROM we_user
        <where>
        corp_id = #{corpId}
        AND  main_department IN  (${ids})
        <if test="isActivate != null" >
            AND is_activate = #{isActivate}
        </if>
        AND is_activate != ${@com.easywecom.common.enums.StaffActivateEnum@DELETE.code}
        </where>
    </select>
    <!--    查询部门和其所有下级部门-->
    <select id="selectDepartmentAndChild" resultType="java.lang.String">
        SELECT GROUP_CONCAT(t.p_ids)
        FROM (
                 SELECT @ids AS p_ids,
                        (
                            SELECT @ids := GROUP_CONCAT(id)
                            FROM we_department
                            WHERE corp_id = #{corpId} AND FIND_IN_SET(parent_id, @ids)
                        )    AS c_ids
                 FROM we_department,
                      (SELECT @ids := #{id}) b
                 WHERE  corp_id = #{corpId} AND @ids IS NOT NULL
             ) t
    </select>
    <select id="selectDepartmentByCorpId" resultType="com.easywecom.common.core.domain.wecom.WeDepartment">
        <include refid="selectWeDepartmentVo"></include>
        WHERE
        corp_id = #{corpId}
    </select>

    <insert id="insertWeDepartment" parameterType="WeDepartment">
        insert into we_department
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="corpId != null">corp_id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="parentId != null">parent_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="corpId != null">#{corpId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="parentId != null">#{parentId},</if>
        </trim>
    </insert>

    <update id="updateWeDepartment" parameterType="WeDepartment">
        update we_department
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="parentId != null">parent_id = #{parentId},</if>
        </trim>
        where id = #{id}
    </update>


    <delete id="deleteAllWeDepartment">
        delete from we_department
    </delete>


    <insert id="batchInsertWeDepartment">
        insert into we_department (id, name, parent_id,corp_id)
        values
        <foreach collection="weDepartments" item="weDepartment" index="index" separator=",">
            (#{weDepartment.id},#{weDepartment.name},#{weDepartment.parentId},#{weDepartment.corpId})
        </foreach>
        ON DUPLICATE KEY UPDATE
        name = VALUES(name),
        parent_id = VALUES(parent_id)
    </insert>


</mapper>